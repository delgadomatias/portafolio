---
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description: string;
  ogImage: string;
  canonicalUrl: string;
  type?: "website" | "article";
  publishDate?: Date;
}

const {
  title,
  description,
  ogImage,
  canonicalUrl,
  type = "website",
  publishDate,
} = Astro.props;
---

<!doctype html>
<html lang="es" data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <meta name="theme-color" content="#100720" />
    <meta name="robots" content="index, follow" />
    <meta name="author" content="Matias Delgado" />
    <meta
      name="keywords"
      content="Matias Delgado, Desarrollador, Frontend, Backend, Software, Web, Blog, Artículos, Tutoriales, Programación, JavaScript, TypeScript, React, Node.js, Svelte, Astro, TailwindCSS, Vercel, Netlify, GitHub"
    />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:site_name" content={title} />
    <meta property="og:type" content={type} />
    {
      publishDate && (
        <meta
          property="article:published_time"
          content={publishDate.toISOString()}
        />
      )
    }

    <link rel="canonical" href={canonicalUrl} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="relative overflow-x-hidden bg-primary-950">
    <slot />

    <style is:global>
      @import url("https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap");
      @import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap");

      @tailwind base;
      @tailwind components;
      @tailwind utilities;

      kbd {
        @apply bg-black !text-white;
      }

      code,
      blockquote {
        word-wrap: break-word;
      }

      pre > code {
        white-space: pre;
      }

      .prose pre {
        @apply rounded-md py-4 px-0;
      }

      .prose code {
        @apply w-full block text-base;
      }

      .prose hr {
        @apply my-6;
      }

      .prose a {
        @apply break-words;
      }

      .prose thead th:first-child,
      tbody td:first-child,
      tfoot td:first-child {
        padding-left: 0.5714286em;
      }

      .prose h2 {
        @apply mt-8 mb-4 text-3xl font-black;
      }

      .prose h2 #table-of-contents {
        @apply mb-2;
      }

      .prose details {
        @apply inline-block cursor-pointer select-none;
      }

      .prose summary {
        @apply focus-outline text-white;
      }

      summary {
        display: list-item;
      }

      .prose h2 + p {
        @apply !m-0;
      }

      .prose details p {
        @apply !opacity-100 !text-white;
      }

      mark {
        background: none;
        @apply text-[#61ff00]  font-semibold;
      }

      html {
        scrollbar-width: thin;
        scrollbar-color: var(--text-color-primary) #161719;
        @apply scroll-pt-24 scroll-smooth;
      }

      ::selection {
        @apply bg-black;
      }

      /* Fonts */
      @font-face {
        font-family: "Franie";
        src: url("/fonts/franie-regular.otf") format("opentype");
        font-weight: 400;
        font-display: swap;
      }

      @font-face {
        font-family: "Franie";
        src: url("/fonts/franie-bold.otf") format("opentype");
        font-weight: 700;
        font-display: swap;
      }

      @font-face {
        font-family: "Junction";
        src: url("/fonts/junction-regular.otf") format("opentype");
        font-weight: 400;
        font-display: swap;
      }

      /* Layers */
      @layer base {
        :root,
        html[data-theme="dark"] {
          --background-primary: #100720;
          --text-color-primary: #fde047;
          --text-color-secondary: #e3e4e4;

          /* Paragraph */
          --text-color-paragraph: #dfe4e2;
          --text-color-paragraph-highlight: #61ff00;

          --icons-color: #cdf37c;

          /* Buttons */
          --primary-button-color: #31087b;
          --primary-button-border: #fa2fb5;
        }

        .prose h2#table-of-contents + p {
          @apply hidden;
        }

        .prose details a {
          @apply !decoration-dashed underline-offset-8;
        }

        .prose {
          @apply prose-headings:!mb-3 prose-headings:!text-white
        prose-h3:italic prose-p:!text-white
    prose-a:!text-white prose-a:underline prose-a:underline-offset-0
    hover:prose-a:text-black prose-blockquote:border-l-yellow-300
    prose-blockquote:border-opacity-50 prose-blockquote:opacity-80
    prose-figcaption:!text-white prose-figcaption:opacity-70
    prose-strong:!text-white

    
    prose-code:rounded 
    prose-code:bg-opacity-75 prose-code:p-0
    prose-code:before:!content-[''] prose-code:after:!content-['']
    prose-ol:!text-white 
    prose-ul:overflow-x-clip prose-ul:!text-white prose-li:marker:!text-yellow-400
    prose-table:text-white prose-th:border
 prose-td:border 
 prose-img:mx-auto 
    prose-img:!mt-2 prose-img:border-2;
        }
      }

      @layer components {
        .container {
          @apply max-w-4xl mx-auto;
        }

        .p-container {
          @apply px-6 lg:px-0;
        }

        .focus-outline {
          @apply outline-2 outline-offset-1 focus-visible:no-underline focus-visible:outline-dashed;
        }
      }
    </style>
  </body>
</html>
